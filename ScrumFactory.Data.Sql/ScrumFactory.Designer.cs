//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScrumFactoryModel", "FK_BacklogItem_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumFactory.Data.Sql.Project), "BacklogItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumFactory.Data.Sql.BacklogItem), true)]

#endregion

namespace ScrumFactory.Data.Sql
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScrumFactoryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScrumFactoryEntities object using the connection string found in the 'ScrumFactoryEntities' section of the application configuration file.
        /// </summary>
        public ScrumFactoryEntities() : base("name=ScrumFactoryEntities", "ScrumFactoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScrumFactoryEntities object.
        /// </summary>
        public ScrumFactoryEntities(string connectionString) : base(connectionString, "ScrumFactoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScrumFactoryEntities object.
        /// </summary>
        public ScrumFactoryEntities(EntityConnection connection) : base(connection, "ScrumFactoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BacklogItem> BacklogItems
        {
            get
            {
                if ((_BacklogItems == null))
                {
                    _BacklogItems = base.CreateObjectSet<BacklogItem>("BacklogItems");
                }
                return _BacklogItems;
            }
        }
        private ObjectSet<BacklogItem> _BacklogItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectMember> ProjectMembers
        {
            get
            {
                if ((_ProjectMembers == null))
                {
                    _ProjectMembers = base.CreateObjectSet<ProjectMember>("ProjectMembers");
                }
                return _ProjectMembers;
            }
        }
        private ObjectSet<ProjectMember> _ProjectMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BacklogItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBacklogItems(BacklogItem backlogItem)
        {
            base.AddObject("BacklogItems", backlogItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectMembers(ProjectMember projectMember)
        {
            base.AddObject("ProjectMembers", projectMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumFactoryModel", Name="BacklogItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BacklogItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BacklogItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="spent">Initial value of the Spent property.</param>
        public static BacklogItem CreateBacklogItem(global::System.String id, global::System.String projectId, global::System.String description, global::System.Double weight, global::System.Double spent)
        {
            BacklogItem backlogItem = new BacklogItem();
            backlogItem.Id = id;
            backlogItem.ProjectId = projectId;
            backlogItem.Description = description;
            backlogItem.Weight = weight;
            backlogItem.Spent = spent;
            return backlogItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.String _ProjectId;
        partial void OnProjectIdChanging(global::System.String value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Double _Weight;
        partial void OnWeightChanging(global::System.Double value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Spent
        {
            get
            {
                return _Spent;
            }
            set
            {
                OnSpentChanging(value);
                ReportPropertyChanging("Spent");
                _Spent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Spent");
                OnSpentChanged();
            }
        }
        private global::System.Double _Spent;
        partial void OnSpentChanging(global::System.Double value);
        partial void OnSpentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumFactoryModel", "FK_BacklogItem_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ScrumFactoryModel.FK_BacklogItem_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ScrumFactoryModel.FK_BacklogItem_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ScrumFactoryModel.FK_BacklogItem_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ScrumFactoryModel.FK_BacklogItem_Project", "Project", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumFactoryModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Project CreateProject(global::System.String id, global::System.String name)
        {
            Project project = new Project();
            project.Id = id;
            project.Name = name;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumFactoryModel", "FK_BacklogItem_Project", "BacklogItem")]
        public EntityCollection<BacklogItem> BacklogItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BacklogItem>("ScrumFactoryModel.FK_BacklogItem_Project", "BacklogItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BacklogItem>("ScrumFactoryModel.FK_BacklogItem_Project", "BacklogItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumFactoryModel", Name="ProjectMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectMember object.
        /// </summary>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static ProjectMember CreateProjectMember(global::System.String projectId, global::System.String memberId, global::System.String roleId)
        {
            ProjectMember projectMember = new ProjectMember();
            projectMember.ProjectId = projectId;
            projectMember.MemberId = memberId;
            projectMember.RoleId = roleId;
            return projectMember;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                if (_ProjectId != value)
                {
                    OnProjectIdChanging(value);
                    ReportPropertyChanging("ProjectId");
                    _ProjectId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProjectId");
                    OnProjectIdChanged();
                }
            }
        }
        private global::System.String _ProjectId;
        partial void OnProjectIdChanging(global::System.String value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                if (_MemberId != value)
                {
                    OnMemberIdChanging(value);
                    ReportPropertyChanging("MemberId");
                    _MemberId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MemberId");
                    OnMemberIdChanged();
                }
            }
        }
        private global::System.String _MemberId;
        partial void OnMemberIdChanging(global::System.String value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.String _RoleId;
        partial void OnRoleIdChanging(global::System.String value);
        partial void OnRoleIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumFactoryModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Role CreateRole(global::System.String id, global::System.String description)
        {
            Role role = new Role();
            role.Id = id;
            role.Description = description;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }

    #endregion
    
}
