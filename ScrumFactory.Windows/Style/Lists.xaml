<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:SF_Helpers="clr-namespace:ScrumFactory.Windows.Helpers;assembly=ScrumFactory.Windows.Helpers"
                    xmlns:SF_Helpers_Ext="clr-namespace:ScrumFactory.Windows.Helpers.Extensions;assembly=ScrumFactory.Windows.Helpers"
                    xmlns:SF_Converters="clr-namespace:ScrumFactory.Windows.Helpers.Converters;assembly=ScrumFactory.Windows.Helpers"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:props="clr-namespace:ScrumFactory.Windows.Properties"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <SF_Converters:MarginConverter x:Key="MarginConverter" />

    <Storyboard x:Key="InsertItemStoryBoard" Storyboard.TargetName="content" PresentationOptions:Freeze="True">        
        <ThicknessAnimation Duration="00:00:0.1"
                            Storyboard.TargetProperty="Margin"
                            To="0,0,0,0"
                            From="-40,0,0,0"/>
    </Storyboard>

    <Storyboard x:Key="InsertListViewItemStoryBoard" Storyboard.TargetName="content" PresentationOptions:Freeze="True">
        <ThicknessAnimation Duration="00:00:0.1"
                            Storyboard.TargetProperty="Margin"
                            To="0,0,0,0"
                            From="-40,0,0,0"/>
        
    </Storyboard>

    <Style x:Key="CustomFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeThickness="2" Stroke="LightGray" StrokeDashArray="1 2" RadiusX="3" RadiusY="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">                    
                        <Border Style="{StaticResource MouseOverListBorder}" Padding="2" x:Name="item">
                          <ContentPresenter x:Name="content" />
                        </Border>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="item" Property="Background" Value="{StaticResource SelectedItemBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ListBoxItem}" x:Key="NoHoverListBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    
                        <ContentPresenter x:Name="content" />                    
                    <ControlTemplate.Triggers>                                       
                        <DataTrigger Binding="{Binding JustHasBeenInserted}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InsertItemStoryBoard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="NoSelectionListBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Style="{StaticResource MouseOverListBorder}" Padding="2" x:Name="item">
                        <ContentPresenter x:Name="content" />
                    </Border>         
                    <ControlTemplate.Triggers>                       
                        <DataTrigger Binding="{Binding JustHasBeenInserted}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InsertItemStoryBoard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter/>
                        <ItemsPresenter Margin="0,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="HorizontalLineDividedListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">            
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="item" Background="{TemplateBinding Background}"                            
                            BorderThickness="0,0,0,1" Padding="0" BorderBrush="{StaticResource ItemDivisonLineBrush}">
                        <Border Style="{StaticResource MouseOverListBorder}">
                            <ContentPresenter x:Name="content" />
                        </Border>                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="item" Property="Background" Value="{StaticResource SelectedItemBackgroundBrush}" />
                        </Trigger>                        
                        <DataTrigger Binding="{Binding JustHasBeenInserted}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InsertItemStoryBoard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FixesListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="item" Background="{TemplateBinding Background}"                            
                            BorderThickness="0,0,0,1" Padding="0" BorderBrush="{StaticResource ItemDivisonLineBrush}">
                        <Border Style="{StaticResource MouseOverListBorder}">
                            <ContentPresenter x:Name="content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="item" Property="Background" Value="{StaticResource SelectedItemBackgroundBrush}" />
                        </Trigger>                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="HorizontalLineDividedNoSelectionListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="item" Background="{TemplateBinding Background}"                            
                            BorderThickness="0,0,0,1" Padding="0" BorderBrush="{StaticResource ItemDivisonLineBrush}">
                        <Border Style="{StaticResource MouseOverListBorder}" Margin="0">
                            <ContentPresenter x:Name="content" />
                        </Border>
                    </Border>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoHorizontalLineDividedListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="item" Background="{TemplateBinding Background}"                            
                            BorderThickness="0,0,0,1" Padding="0" BorderBrush="Transparent">
                        <Border Style="{StaticResource MouseOverListBorder}">
                            <ContentPresenter x:Name="content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="item" Property="Background" Value="{StaticResource SelectedItemBackgroundBrush}" />
                        </Trigger>                        
                        <DataTrigger Binding="{Binding JustHasBeenInserted}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InsertItemStoryBoard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoHorizontalLineDividedNoSelectionListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="item" Background="{TemplateBinding Background}"                            
                            BorderThickness="0,0,0,1" Padding="0" BorderBrush="Transparent">
                        <Border Style="{StaticResource MouseOverListBorder}" >
                            <ContentPresenter x:Name="content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>                      
                        <!--<DataTrigger Binding="{Binding JustHasBeenInserted}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InsertItemStoryBoard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisual}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource NoHorizontalLineDividedListBoxItem}"/>
        <Setter Property="SF_Helpers_Ext:GestureExtension.HandleManipulationBoundary" Value="True"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" >
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisual}"/>
        <Setter Property="SF_Helpers_Ext:ListBringIntoViewBehavior.BringIntoViewNewItems" Value="True"/>
        <!--<Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style />
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">

                    <Border x:Name="item" Background="{TemplateBinding Background}" BorderThickness="0,0,0,1"  BorderBrush="{StaticResource ItemDivisonLineBrush}">
                        <Border Style="{StaticResource MouseOverListBorder}" x:Name="border" Padding="0,10,0,10">
                            <GridViewRowPresenter x:Name="content" ClipToBounds="True"  />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="item" Property="Background" Value="{StaticResource SelectedItemBackgroundBrush}" />                            
                        </Trigger>                        
                        <DataTrigger Binding="{Binding JustHasBeenInserted}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InsertListViewItemStoryBoard}"/>                                                                
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource AlternateRowBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListView}" >
        <Setter Property="OverridesDefaultStyle" Value="true"/>        
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>        
        <Setter Property="SF_Helpers_Ext:GestureExtension.HandleManipulationBoundary" Value="True"/>
      
        <Setter Property="Template">            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    
                    <DockPanel>
                        <Border
                            DockPanel.Dock="Top"
                            Background="{StaticResource GridHeaderBackground}" CornerRadius="5,5,0,0" Padding="2,3,2,3">
                            <GridViewHeaderRowPresenter
                                    Columns="{Binding Path=View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding Path=View.ColumnHeaderContainerStyle,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding Path=View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplateSelector="{Binding Path=View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                    AllowsColumnReorder="{Binding Path=View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding Path=View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding Path=View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ScrollViewer >
                            <ItemsPresenter HorizontalAlignment="Stretch"  Margin="0,7,0,5"/>
                        </ScrollViewer>
                    </DockPanel>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewNoHeader" TargetType="{x:Type ListView}" >
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <!--<Setter Property="AlternationCount" Value="2"/>-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SF_Helpers_Ext:GestureExtension.HandleManipulationBoundary" Value="True"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">                                            
                    <ScrollViewer>
                        <ItemsPresenter HorizontalAlignment="Stretch" Margin="0,7,0,5"/>
                    </ScrollViewer>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource GridHeaderForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true"
                          Visibility="{TemplateBinding Visibility}"
                          Background="{TemplateBinding Background}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                Margin="1,0,1,0">
                            <ContentPresenter x:Name="HeaderContent"
                                              Margin="5,0,0,1"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="FontSize" Value="{StaticResource SmallFontSize}"/>                                        
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                        <Thumb
                                x:Name="PART_HeaderGripper"
                                HorizontalAlignment="Right"
                                Margin="0"
                                Width="2" >
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Width="3" Background="Transparent"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>

                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/>
                            <Setter Property="Background" Value="#FDFDFD"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                            <Setter Property="Background" Value="#FDFDFD"/>
                            <Setter Property="BorderBrush" Value="#FDFDFD"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="{TemplateBinding Padding}" 
                                        Margin="1,0,1,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>






</ResourceDictionary>